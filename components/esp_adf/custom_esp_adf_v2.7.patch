diff --git a/components/audio_board/include/board_pins_config.h b/components/audio_board/include/board_pins_config.h
index 62893921..f536ee46 100644
--- a/components/audio_board/include/board_pins_config.h
+++ b/components/audio_board/include/board_pins_config.h
@@ -29,6 +29,7 @@
 #include "driver/spi_common.h"
 #include "driver/spi_master.h"
 #include "driver/spi_slave.h"
+#include "driver/i2s_std.h"
 
 #ifdef __cplusplus
 extern "C" {
@@ -61,13 +62,13 @@ esp_err_t get_i2c_pins(i2c_port_t port, i2c_config_t *i2c_config);
  * @brief                  Get i2s pins configuration
  *
  * @param      port        i2s port number to get configuration
- * @param      i2s_config  i2s configuration parameters
+ * @param      gpio_cfg    i2s configuration parameters
  *
  * @return
  *     - ESP_OK
  *     - ESP_FAIL
  */
-esp_err_t get_i2s_pins(int port, board_i2s_pin_t *i2s_config);
+esp_err_t get_i2s_pins(int port, i2s_std_gpio_config_t *gpio_cfg);
 
 /**
  * @brief                  Get spi pins configuration
diff --git a/components/audio_hal/driver/tas5805m/tas5805m.c b/components/audio_hal/driver/tas5805m/tas5805m.c
index fef4fe3c..7c448d8d 100644
--- a/components/audio_hal/driver/tas5805m/tas5805m.c
+++ b/components/audio_hal/driver/tas5805m/tas5805m.c
@@ -94,7 +94,7 @@ static esp_err_t tas5805m_transmit_registers(const tas5805m_cfg_reg_t *conf_buf,
                 // Used in legacy applications.  Ignored here.
                 break;
             case CFG_META_DELAY:
-                vTaskDelay(conf_buf[i].value / portTICK_RATE_MS);
+                vTaskDelay(conf_buf[i].value / portTICK_PERIOD_MS);
                 break;
             case CFG_META_BURST:
                 ret = i2c_bus_write_bytes(i2c_handler, TAS5805M_ADDR, (unsigned char *)(&conf_buf[i + 1].offset), 1, (unsigned char *)(&conf_buf[i + 1].value), conf_buf[i].value);
@@ -129,9 +129,9 @@ esp_err_t tas5805m_init(audio_hal_codec_config_t *codec_cfg)
     io_conf.intr_type = GPIO_INTR_DISABLE;
     gpio_config(&io_conf);
     gpio_set_level(TAS5805M_RST_GPIO, 0);
-    vTaskDelay(20 / portTICK_RATE_MS);
+    vTaskDelay(20 / portTICK_PERIOD_MS);
     gpio_set_level(TAS5805M_RST_GPIO, 1);
-    vTaskDelay(200 / portTICK_RATE_MS);
+    vTaskDelay(200 / portTICK_PERIOD_MS);
 
     ret = get_i2c_pins(I2C_NUM_0, &i2c_cfg);
     i2c_handler = i2c_bus_create(I2C_NUM_0, &i2c_cfg);
diff --git a/components/audio_hal/include/audio_hal.h b/components/audio_hal/include/audio_hal.h
index 1a9cf12a..065218c1 100755
--- a/components/audio_hal/include/audio_hal.h
+++ b/components/audio_hal/include/audio_hal.h
@@ -147,7 +147,7 @@ typedef struct audio_hal {
     esp_err_t (*audio_codec_set_volume)(int volume);                                                         /*!< set codec volume */
     esp_err_t (*audio_codec_get_volume)(int *volume);                                                        /*!< get codec volume */
     esp_err_t (*audio_codec_enable_pa) (bool enable);                                                        /*!< enable pa */
-    xSemaphoreHandle audio_hal_lock;                                                                         /*!< semaphore of codec */
+    SemaphoreHandle_t audio_hal_lock;                                                                         /*!< semaphore of codec */
     void *handle;                                                                                            /*!< handle of audio codec */
 } audio_hal_func_t;
 
diff --git a/components/esp_peripherals/include/esp_peripherals.h b/components/esp_peripherals/include/esp_peripherals.h
index ad4f9fe9..c6be4089 100644
--- a/components/esp_peripherals/include/esp_peripherals.h
+++ b/components/esp_peripherals/include/esp_peripherals.h
@@ -29,6 +29,7 @@
 #include "audio_event_iface.h"
 #include "audio_common.h"
 #include "freertos/event_groups.h"
+#include "freertos/timers.h"
 
 #ifdef __cplusplus
 extern "C" {
@@ -76,7 +77,7 @@ typedef struct esp_periph *esp_periph_handle_t;
 typedef esp_err_t (*esp_periph_func)(esp_periph_handle_t periph);
 typedef esp_err_t (*esp_periph_run_func)(esp_periph_handle_t periph, audio_event_iface_msg_t *msg);
 typedef esp_err_t (*esp_periph_event_handle_t)(audio_event_iface_msg_t *event, void *context);
-typedef void (*timer_callback)(xTimerHandle tmr);
+typedef void (*timer_callback)(TimerHandle_t tmr);
 
 /**
  * @brief Common peripherals configurations
