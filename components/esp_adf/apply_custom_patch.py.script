from os.path import join, isfile
import os

Import("env")

FRAMEWORK_DIR = env.PioPlatform().get_package_dir("framework-espidf")
patchflag_path = join(FRAMEWORK_DIR, ".adf-patching-done")

PROJECT_DIR = env.get('PROJECT_DIR')

# Custom patch file path
PATCH_FILE = join(PROJECT_DIR, "esp_adf_patches", "esp_adf_patch.diff")

# Check if patch file exists
if not isfile(PATCH_FILE):
    raise FileNotFoundError(f"Patch file not found: {PATCH_FILE}")

# Apply patch only if not already applied
if not isfile(patchflag_path):
    print(f"Applying patch: {PATCH_FILE}")
    try:
        env.Execute(f"patch -p1 -d {FRAMEWORK_DIR} -i {PATCH_FILE}")
        # Create a flag file to indicate patching is complete
        with open(patchflag_path, "w") as f:
            f.write("")
    except Exception as e:
        print(f"Failed to apply patch: {e}")
        raise
else:
    print("Patch already applied, skipping.")
